{"version":3,"sources":["../src/ansi_to_html.js"],"names":["entities","require","defaults","fg","bg","newline","escapeXML","stream","colors","getDefaultColors","range","forEach","red","green","blue","setStyleColor","gray","c","l","toHexString","r","g","b","toColorHexString","num","str","toString","length","ref","results","push","join","generateOutput","stack","token","data","options","result","pushText","handleDisplay","pushForegroundColor","handleRgb","substring","slice","operation","substr","color","split","rgb","map","value","Number","pushStyle","code","parseInt","codeMap","resetStyles","pushTag","closeTag","pushBackgroundColor","stackClone","reverse","tag","low","high","j","notCategory","category","e","categoryForCode","text","encodeXML","style","last","pop","tokenize","callback","ansiMatch","ansiHandler","remove","removeXterm256","m","g1","ansiMess","trim","trimRight","realText","tokens","pattern","sub","process","handler","i","replace","results1","outer","o","len","updateStickyStack","stickyStack","filter","Filter","Object","assign","input","buf","element","output","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\nconst entities = require('entities');\r\nconst defaults = {\r\n    fg: '#FFF',\r\n    bg: '#000',\r\n    newline: false,\r\n    escapeXML: false,\r\n    stream: false,\r\n    colors: getDefaultColors()\r\n};\r\n\r\nfunction getDefaultColors() {\r\n    const colors = {\r\n        0: '#000',\r\n        1: '#A00',\r\n        2: '#0A0',\r\n        3: '#A50',\r\n        4: '#00A',\r\n        5: '#A0A',\r\n        6: '#0AA',\r\n        7: '#AAA',\r\n        8: '#555',\r\n        9: '#F55',\r\n        10: '#5F5',\r\n        11: '#FF5',\r\n        12: '#55F',\r\n        13: '#F5F',\r\n        14: '#5FF',\r\n        15: '#FFF'\r\n    };\r\n\r\n    range(0, 5).forEach(red => {\r\n        range(0, 5).forEach(green => {\r\n            range(0, 5).forEach(blue => setStyleColor(red, green, blue, colors));\r\n        });\r\n    });\r\n\r\n    range(0, 23).forEach(function (gray) {\r\n        const c = gray + 232;\r\n        const l = toHexString(gray * 10 + 8);\r\n\r\n        colors[c] = '#' + l + l + l;\r\n    });\r\n\r\n    return colors;\r\n}\r\n\r\n/**\r\n * @param {number} red\r\n * @param {number} green\r\n * @param {number} blue\r\n * @param {object} colors\r\n */\r\nfunction setStyleColor(red, green, blue, colors) {\r\n    const c = 16 + (red * 36) + (green * 6) + blue;\r\n    const r = red > 0 ? red * 40 + 55 : 0;\r\n    const g = green > 0 ? green * 40 + 55 : 0;\r\n    const b = blue > 0 ? blue * 40 + 55 : 0;\r\n\r\n    colors[c] = toColorHexString([r, g, b]);\r\n}\r\n\r\n/**\r\n * Converts from a number like 15 to a hex string like 'F'\r\n * @param {number} num\r\n * @returns {string}\r\n */\r\nfunction toHexString(num) {\r\n    let str = num.toString(16);\r\n\r\n    while (str.length < 2) {\r\n        str = '0' + str;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\n/**\r\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\r\n * @param {[red, green, blue]} ref\r\n * @returns {string}\r\n */\r\nfunction toColorHexString(ref) {\r\n    const results = [];\r\n\r\n    for (const r of ref) {\r\n        results.push(toHexString(r));\r\n    }\r\n\r\n    return '#' + results.join('');\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {string} token\r\n * @param {*} data\r\n * @param {object} options\r\n */\r\nfunction generateOutput(stack, token, data, options) {\r\n    let result;\r\n\r\n    if (token === 'text') {\r\n        result = pushText(data, options);\r\n    } else if (token === 'display') {\r\n        result = handleDisplay(stack, data, options);\r\n    } else if (token === 'xterm256') {\r\n        result = pushForegroundColor(stack, options.colors[data]);\r\n    } else if (token === 'rgb') {\r\n        result = handleRgb(stack, data);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {string} data\r\n * @returns {*}\r\n */\r\nfunction handleRgb(stack, data) {\r\n    data = data.substring(2).slice(0, -1);\r\n    const operation = +data.substr(0,2);\r\n\r\n    const color = data.substring(5).split(';');\r\n    const rgb = color.map(function(value) {\r\n        return ('0' + Number(value).toString(16)).substr(-2);\r\n    }).join('');\r\n\r\n    return pushStyle(stack, (operation === 38 ? 'color:#' : 'background-color:#') + rgb);\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {number} code\r\n * @param {object} options\r\n * @returns {*}\r\n */\r\nfunction handleDisplay(stack, code, options) {\r\n    code = parseInt(code, 10);\r\n\r\n    const codeMap = {\r\n        '-1': () => '<br/>',\r\n        0: () => stack.length && resetStyles(stack),\r\n        1: () => pushTag(stack, 'b'),\r\n        3: () => pushTag(stack, 'i'),\r\n        4: () => pushTag(stack, 'u'),\r\n        8: () => pushStyle(stack, 'display:none'),\r\n        9: () => pushTag(stack, 'strike'),\r\n        22: () => pushStyle(stack, 'font-weight:normal;text-decoration:none;font-style:normal'),\r\n        23: () => closeTag(stack, 'i'),\r\n        24: () => closeTag(stack, 'u'),\r\n        39: () => pushForegroundColor(stack, options.fg),\r\n        49: () => pushBackgroundColor(stack, options.bg),\r\n        53: () => pushStyle(stack, 'text-decoration:overline')\r\n    };\r\n\r\n    let result;\r\n    if (codeMap[code]) {\r\n        result = codeMap[code]();\r\n    } else if (4 < code && code < 7) {\r\n        result = pushTag(stack, 'blink');\r\n    } else if (29 < code && code < 38) {\r\n        result = pushForegroundColor(stack, options.colors[code - 30]);\r\n    } else if ((39 < code && code < 48)) {\r\n        result = pushBackgroundColor(stack, options.colors[code - 40]);\r\n    } else if ((89 < code && code < 98)) {\r\n        result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);\r\n    } else if ((99 < code && code < 108)) {\r\n        result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Clear all the styles\r\n * @returns {string}\r\n */\r\nfunction resetStyles(stack) {\r\n    const stackClone = stack.slice(0);\r\n\r\n    stack.length = 0;\r\n\r\n    return stackClone.reverse().map(function (tag) {\r\n        return '</' + tag + '>';\r\n    }).join('');\r\n}\r\n\r\n/**\r\n * Creates an array of numbers ranging from low to high\r\n * @param {number} low\r\n * @param {number} high\r\n * @returns {Array}\r\n * @example range(3, 7); // creates [3, 4, 5, 6, 7]\r\n */\r\nfunction range(low, high) {\r\n    const results = [];\r\n\r\n    for (let j = low; j <= high; j++) {\r\n        results.push(j);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Returns a new function that is true if value is NOT the same category\r\n * @param {string} category\r\n * @returns {function}\r\n */\r\nfunction notCategory(category) {\r\n    return function (e) {\r\n        return (category === null || e.category !== category) && category !== 'all';\r\n    };\r\n}\r\n\r\n/**\r\n * Converts a code into an ansi token type\r\n * @param {number} code\r\n * @returns {string}\r\n */\r\nfunction categoryForCode(code) {\r\n    code = parseInt(code, 10);\r\n    let result = null;\r\n\r\n    if (code === 0) {\r\n        result = 'all';\r\n    } else if (code === 1) {\r\n        result = 'bold';\r\n    } else if ((2 < code && code < 5)) {\r\n        result = 'underline';\r\n    } else if ((4 < code && code < 7)) {\r\n        result = 'blink';\r\n    } else if (code === 8) {\r\n        result = 'hide';\r\n    } else if (code === 9) {\r\n        result = 'strike';\r\n    } else if ((29 < code && code < 38) || code === 39 || (89 < code && code < 98)) {\r\n        result = 'foreground-color';\r\n    } else if ((39 < code && code < 48) || code === 49 || (99 < code && code < 108)) {\r\n        result = 'background-color';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {object} options\r\n * @returns {string}\r\n */\r\nfunction pushText(text, options) {\r\n    if (options.escapeXML) {\r\n        return entities.encodeXML(text);\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {string} tag\r\n * @param {string} [style='']\r\n * @returns {string}\r\n */\r\nfunction pushTag(stack, tag, style) {\r\n    if (!style) {\r\n        style = '';\r\n    }\r\n\r\n    stack.push(tag);\r\n\r\n    return `<${tag}${style ? ` style=\"${style}\"` : ''}>`;\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {string} style\r\n * @returns {string}\r\n */\r\nfunction pushStyle (stack, style) {\r\n    return pushTag(stack, 'span', style);\r\n}\r\n\r\nfunction pushForegroundColor(stack, color) {\r\n    return pushTag(stack, 'span', 'color:' + color);\r\n}\r\n\r\nfunction pushBackgroundColor(stack, color) {\r\n    return pushTag(stack, 'span', 'background-color:' + color);\r\n}\r\n\r\n/**\r\n * @param {Array} stack\r\n * @param {string} style\r\n * @returns {string}\r\n */\r\nfunction closeTag(stack, style) {\r\n    let last;\r\n\r\n    if (stack.slice(-1)[0] === style) {\r\n        last = stack.pop();\r\n    }\r\n\r\n    if (last) {\r\n        return '</' + style + '>';\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {object} options\r\n * @param {function} callback\r\n * @returns {Array}\r\n */\r\nfunction tokenize(text, options, callback) {\r\n    let ansiMatch = false;\r\n    const ansiHandler = 3;\r\n\r\n    function remove() {\r\n        return '';\r\n    }\r\n\r\n    function removeXterm256(m, g1) {\r\n        callback('xterm256', g1);\r\n        return '';\r\n    }\r\n\r\n    function newline(m) {\r\n        if (options.newline) {\r\n            callback('display', -1);\r\n        } else {\r\n            callback('text', m);\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    function ansiMess(m, g1) {\r\n        ansiMatch = true;\r\n        if (g1.trim().length === 0) {\r\n            g1 = '0';\r\n        }\r\n\r\n        g1 = g1.trimRight(';').split(';');\r\n\r\n        for (const g of g1) {\r\n            callback('display', g);\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    function realText(m) {\r\n        callback('text', m);\r\n\r\n        return '';\r\n    }\r\n\r\n    function rgb(m) {\r\n        callback('rgb', m);\r\n\r\n        return '';\r\n    }\r\n\r\n    /* eslint no-control-regex:0 */\r\n    const tokens = [{\r\n        pattern: /^\\x08+/,\r\n        sub: remove\r\n    }, {\r\n        pattern: /^\\x1b\\[[012]?K/,\r\n        sub: remove\r\n    }, {\r\n        pattern: /^\\x1b\\[\\(B/,\r\n        sub: remove\r\n    }, {\r\n        pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\r\n        sub: rgb\r\n    }, {\r\n        pattern: /^\\x1b\\[38;5;(\\d+)m/,\r\n        sub: removeXterm256\r\n    }, {\r\n        pattern: /^\\n/,\r\n        sub: newline\r\n    },{\r\n        pattern: /^\\r+\\n/,\r\n        sub: newline\r\n    }, {\r\n        pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\r\n        sub: ansiMess\r\n    }, {\r\n        // CSI n J\r\n        // ED - Erase in Display Clears part of the screen.\r\n        // If n is 0 (or missing), clear from cursor to end of screen.\r\n        // If n is 1, clear from cursor to beginning of the screen.\r\n        // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\r\n        // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\r\n        //   (this feature was added for xterm and is supported by other terminal applications).\r\n        pattern: /^\\x1b\\[\\d?J/,\r\n        sub: remove\r\n    }, {\r\n        // CSI n ; m f\r\n        // HVP - Horizontal Vertical Position Same as CUP\r\n        pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\r\n        sub: remove\r\n    }, {\r\n        // catch-all for CSI sequences?\r\n        pattern: /^\\x1b\\[?[\\d;]{0,3}/,\r\n        sub: remove\r\n    }, {\r\n        /**\r\n         * extracts real text - not containing:\r\n         * - `\\x1b' - ESC - escape (Ascii 27)\r\n         * - '\\x08' - BS - backspace (Ascii 8)\r\n         * - `\\n` - Newline - linefeed (LF) (ascii 10)\r\n         * - `\\r` - Windows Carriage Return (CR)\r\n         */\r\n        pattern: /^(([^\\x1b\\x08])+)/,\r\n        sub: realText\r\n    }];\r\n\r\n    function process(handler, i) {\r\n        if (i > ansiHandler && ansiMatch) {\r\n            return;\r\n        }\r\n\r\n        ansiMatch = false;\r\n\r\n        text = text.replace(handler.pattern, handler.sub);\r\n    }\r\n\r\n    const results1 = [];\r\n    let {length} = text;\r\n\r\n    outer:\r\n    while (length > 0) {\r\n        for (let i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\r\n            const handler = tokens[i];\r\n            process(handler, i);\r\n\r\n            if (text.length !== length) {\r\n                // We matched a token and removed it from the text. We need to\r\n                // start matching *all* tokens against the new text.\r\n                length = text.length;\r\n                continue outer;\r\n            }\r\n        }\r\n\r\n        if (text.length === length) {\r\n            break;\r\n        }\r\n        results1.push(0);\r\n\r\n        length = text.length;\r\n    }\r\n\r\n    return results1;\r\n}\r\n\r\n/**\r\n * If streaming, then the stack is \"sticky\"\r\n *\r\n * @param {Array} stickyStack\r\n * @param {string} token\r\n * @param {*} data\r\n * @returns {Array}\r\n */\r\nfunction updateStickyStack(stickyStack, token, data) {\r\n    if (token !== 'text') {\r\n        stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));\r\n        stickyStack.push({token, data, category: categoryForCode(data)});\r\n    }\r\n\r\n    return stickyStack;\r\n}\r\n\r\nclass Filter {\r\n    /**\r\n     * @param {object} options\r\n     * @param {string=} options.fg The default foreground color used when reset color codes are encountered.\r\n     * @param {string=} options.bg The default background color used when reset color codes are encountered.\r\n     * @param {boolean=} options.newline Convert newline characters to `<br/>`.\r\n     * @param {boolean=} options.escapeXML Generate HTML/XML entities.\r\n     * @param {boolean=} options.stream Save style state across invocations of `toHtml()`.\r\n     * @param {(string[] | {[code: number]: string})=} options.colors Can override specific colors or the entire ANSI palette.\r\n     */\r\n    constructor (options) {\r\n        options = options || {};\r\n\r\n        if (options.colors) {\r\n            options.colors = Object.assign({}, defaults.colors, options.colors);\r\n        }\r\n\r\n        this.options = Object.assign({}, defaults, options);\r\n        this.stack = [];\r\n        this.stickyStack = [];\r\n    }\r\n    /**\r\n     * @param {string | string[]} input\r\n     * @returns {string}\r\n     */\r\n    toHtml (input) {\r\n        input = typeof input === 'string' ? [input] : input;\r\n        const {stack, options} = this;\r\n        const buf = [];\r\n\r\n        this.stickyStack.forEach(element => {\r\n            const output = generateOutput(stack, element.token, element.data, options);\r\n\r\n            if (output) {\r\n                buf.push(output);\r\n            }\r\n        });\r\n\r\n        tokenize(input.join(''), options, (token, data) => {\r\n            const output = generateOutput(stack, token, data, options);\r\n\r\n            if (output) {\r\n                buf.push(output);\r\n            }\r\n\r\n            if (options.stream) {\r\n                this.stickyStack = updateStickyStack(this.stickyStack, token, data);\r\n            }\r\n        });\r\n\r\n        if (stack.length) {\r\n            buf.push(resetStyles(stack));\r\n        }\r\n\r\n        return buf.join('');\r\n    }\r\n}\r\n\r\nmodule.exports = Filter;\r\n"],"file":"ansi_to_html.js"}